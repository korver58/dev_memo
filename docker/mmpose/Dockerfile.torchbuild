FROM nvcr.io/nvidia/l4t-jetpack:r35.4.1

ENV HOME=/root
WORKDIR ${HOME}

RUN apt-get update && apt-get install -y \
    git wget curl lsb-release software-properties-common \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# for cmake latest install
RUN wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | tee /etc/apt/trusted.gpg.d/kitware.gpg >/dev/null \
    && apt-add-repository "deb https://apt.kitware.com/ubuntu/ $(lsb_release -cs) main"

RUN apt-get update && apt-get install -y \
    build-essential cmake \
    python3-dev python3-pip python3-venv \
    # for build pytorch
    # https://docs.nvidia.com/deeplearning/frameworks/install-pytorch-jetson-platform/index.html#prereqs-install
    # https://forums.developer.nvidia.com/t/pytorch-for-jetson/72048
    libopenblas-dev libopenmpi-dev \
    # for torchvision
    # https://forums.developer.nvidia.com/t/pytorch-for-jetson/72048
    libjpeg-dev zlib1g-dev libpython3-dev libopenblas-dev libavcodec-dev libavformat-dev libswscale-dev \
    # for pyenv
    # https://github.com/pyenv/pyenv/wiki#suggested-build-environment
    build-essential libssl-dev zlib1g-dev \
    libbz2-dev libreadline-dev libsqlite3-dev curl \
    libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# set pyenv
# pyenvで導入したpythonをvenvで使用
ARG PYTHON_VER=3.8.18
ENV PYENV_ROOT="${HOME}/.pyenv"
ENV PATH="${PATH}:${PYENV_ROOT}/bin"
RUN git clone https://github.com/pyenv/pyenv.git .pyenv \
    && pyenv install ${PYTHON_VER} \
    && eval "$(pyenv init -)" \
    && pyenv local ${PYTHON_VER} \
    && python -m venv venv \
    && . venv/bin/activate \
    && pip install --upgrade pip

# install pytorch
# https://forums.developer.nvidia.com/t/pytorch-for-jetson/72048
ENV USE_DISTRIBUTED=1
# https://developer.nvidia.com/cuda-gpus#compute
ENV TORCH_CUDA_ARCH_LIST="8.7"   
ENV PYTORCH_BUILD_VERSION=2.1.0
ENV PYTORCH_BUILD_NUMBER=1
ENV USE_CUDA=1
ENV CUDACXX=/usr/local/cuda/bin/nvcc
ENV CUDA_HOME=/usr/local/cuda
ENV CUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda
ENV CUDA_NVCC_EXCUTABLE=/usr/local/cuda/bin/nvcc

RUN git clone --recursive -b v${PYTORCH_BUILD_VERSION} http://github.com/pytorch/pytorch \
    && . venv/bin/activate \
    && cd pytorch \
    && pip install -r requirements.txt \
    && pip install scikit-build ninja \
    && python setup.py bdist_wheel

RUN . venv/bin/activate \
    && pip install ${HOME}/pytorch/dist/torch-2.1.0-cp38-cp38-linux_aarch64.whl

# install torchvision
# https://iq.opengenus.org/build-torchvision-from-source/
ENV BUILD_VERSION=0.16.2
RUN git clone --recursive -b v${BUILD_VERSION} https://github.com/pytorch/vision \
    && . venv/bin/activate \
    && cd vision \
    && python setup.py bdist_wheel \
    && pip install dist/torchvision-${BUILD_VERSION}-cp38-cp38-linux_aarch64.whl

CMD ["/bin/bash"]
