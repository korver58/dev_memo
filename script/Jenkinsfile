pipeline {
    agent none
    environment {
        // Common
        PROJ_NAME = 'OPEN3D'
        OUTPUT_DIR = 'report'

        //  Git
        GIT_URL = 'https://github.com/isl-org/Open3D.git'
        GIT_BRANCH = 'main'
        SRC_DIR = '/'

        //  PMD
        PMD_TARGET_LANG = 'cpp'
    }

    stages {
        stage('Git') {
            agent {
                label 'windows_slave'
            }
            steps {
                cleanWs()
                sh 'mkdir report'
                dir('src') {
                    git branch: "${GIT_BRANCH}", url: "${GIT_URL}"
                }
            }
        }

        stage('PMD-CPD') {
            agent {
                label 'windows_slave'
            }
            steps {
                script {
                    docker.image('pmd_docker-app').inside {
                        sh 'pmd -V'
                        sh '''#!/bin/bash
                            bash /var/jenkins_home/pmd_docker/scripts/run_pmd_cpd.sh "${SRC_DIR}" "${OUTPUT_DIR}" "${PMD_TARGET_LANG}"
                        '''
                    }
                }
            }
        }

        stage('Doxygen') {
            agent {
                label 'windows_slave'
            }
            steps {
                script {
                    docker.image('auto_healthcheck-app').inside {
                        sh '''#!/bin/bash
                            doxygen -g Doxyfile

                            sed -i 's/^PROJECT_NAME.*/PROJECT_NAME = "${PROJ_NAME}"/' Doxyfile
                            sed -i 's/^OUTPUT_DIRECTORY.*/OUTPUT_DIRECTORY = report/doxygen' Doxyfile
                            sed -i 's/^INPUT.*/INPUT = src/' Doxyfile
                            sed -i 's/^RECURSIVE.*/RECURSIVE = YES/' Doxyfile
                            sed -i 's/^GENERATE_HTML.*/GENERATE_HTML = YES/' Doxyfile
                            sed -i 's/^HAVE_DOT.*/HAVE_DOT = YES/' Doxyfile

                            doxygen Doxyfile
                        '''
                    }
                }
            }
        }
    }
}
